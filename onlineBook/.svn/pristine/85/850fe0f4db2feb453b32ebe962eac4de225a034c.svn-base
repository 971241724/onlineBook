package com.b2c.action;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;
import javax.mail.Session;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.junit.Test;
import org.springframework.stereotype.Component;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.b2c.entity.Book;
import com.b2c.entity.Cart;
import com.b2c.entity.User;
import com.b2c.service.IBookService;
import com.b2c.service.ICartService;
import com.b2c.utils.PageBean;

@Controller
public class CartAction {
	
	//分页时每页显示的条数
	final Integer PS=10;
	
	@Resource(name="cartServiceImp")
	private ICartService cartServiceImp;
	
	@Resource(name="bookServiceImp")
	private IBookService bookServiceImp;
	
	/**
	 * 添加到购物车
	 * @param book_id
	 * @param amount
	 * @param session
	 * @param model
	 * @return
	 */
	@RequestMapping(value="addShopCart.action")
	public String  addShopCart(String book_id,int amount,HttpSession session,Model model){
		Double c_price = null;
		Book book = bookServiceImp.getBook_id(book_id);
		User user = (User)session.getAttribute("user");
		if(book.getDown_sale()==1){
			c_price = amount*book.getT_Price();
		}else{
			c_price = amount*book.getPrice();
		}
		Cart cart = new Cart(0,book,user.getUser_id(),amount,c_price,Integer.parseInt(book_id));
		boolean bool = cartServiceImp.addBookCart(cart);
		if(bool){
			return "redirect:/pageSelectCart.action";
		}
		else{
			return "forward:/fruit_page/commodities.jsp";
		}
	}
	
	/**
	 * 查询购物车信息
	 * @param model
	 * @return
	 */
	@RequestMapping(value="selectCart.action")
	public String selectCart(Model model){
		List<Cart> cartList = cartServiceImp.selectCart();
		for(Cart cart : cartList){
			System.out.println(cart.toString());
		}
		int size = cartList.size();
		model.addAttribute("cList", cartList);
		model.addAttribute("size", size);
		return "forward:/fruit_page/cart.jsp";
	}
	
	/**
	 * 分页查询购物车
	 * @param pc
	 * @param model
	 * @return
	 */
	@RequestMapping(value="pageSelectCart.action")
	public String pageSelectCart(Integer pc,Model model){
		if(pc == null){
			pc = 1;
		}
		PageBean<Cart> pageCartSelect = cartServiceImp.pageCartSelect(pc, PS);
		int size = pageCartSelect.getBeanlist().size();
		model.addAttribute("pCart", pageCartSelect);
		model.addAttribute("size", size);
		return "forward:/fruit_page/cart.jsp";
	}
	
	/**
	 * 删除购物车的信息
	 * @param cart_id
	 * @param model
	 * @return
	 */
	@RequestMapping(value="deleteCart.action")
	public String deleteCart(Integer cart_id,Model model){
		boolean bool = cartServiceImp.deleteCart(cart_id);
		if(bool){
			System.out.println("删除成功");
		}else {
			System.out.println("删除失败");
		}
		return "redirect:/pageSelectCart.action";
	}

	/**
	 * 全选删除
	 * @param request
	 * @param model
	 * @return
	 * @throws IOException 
	 */
	@RequestMapping(value="cartDelete.action")
	@ResponseBody
	public void deleteAllCart(HttpServletRequest request,HttpServletResponse response) throws IOException{
		List<String> list = new ArrayList<String>();
		String cartId[] = request.getParameterValues("arrs");
		for(String str : cartId){
			System.out.println(str);
			list.add(str);
		}
		String deleteAllCart = cartServiceImp.deleteAllCart(list);
		response.getWriter().write(deleteAllCart);
	}
	/**
	 * 批量加入购物车
	 * @throws IOException 
	 */
	@RequestMapping(value="allAddCart.action")
	@ResponseBody
    public void addAllCart(HttpServletRequest request,HttpServletResponse response,HttpSession session) throws IOException{
		User user = (User)session.getAttribute("user");
		Integer user_id = user.getUser_id();
    	List<String> list = new ArrayList<String>();
    	String cartId[] = request.getParameterValues("arrs");
		for(String str : cartId){
			list.add(str);
		} 
		int addAllCart = cartServiceImp.addAllCart(list, user_id);
		if(addAllCart == 0){
			response.getWriter().write("添加失败!");
		}else{
			response.getWriter().write("添加成功！");
		}
    }
}
