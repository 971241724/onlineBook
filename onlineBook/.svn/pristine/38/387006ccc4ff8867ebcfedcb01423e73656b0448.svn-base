package com.b2c.action;

import java.io.IOException;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.http.HttpRequest;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;

import com.b2c.entity.Message;
import com.b2c.entity.Notice;
import com.b2c.service.MessageService;
import com.b2c.utils.PageBean;
import com.sun.mail.handlers.message_rfc822;

@Controller
public class MessageAction {
	final Integer ps=10;
	@Resource(name = "MessageServiceImp")
	private MessageService MessageServiceImpl;
	
	@RequestMapping(value="addMessage.action")
	public String addMessage(Model model,HttpServletResponse response,String message_content,HttpSession session,Integer pc ) throws IOException{
		response.setContentType("text/html; charset=utf-8");
		PrintWriter out = response.getWriter();
		if(pc == null){
			pc = 1;
		}
		if(message_content.isEmpty() || message_content.length()<=0){
			out.flush();
		    out.println("<script>");
		    out.println("alert('留言内容不能为空');");
		    out.println("history.back();");
		    out.println("</script>");
		}else{
			String message_username = (String) session.getAttribute("");
			SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
			String message_date = df.format(new Date());
			String message_theme = "书的id";
			Message message = new Message(message_username, message_date, message_content, message_theme);
			boolean flag= MessageServiceImpl.addMessage(message);
			if(flag==true){
				out.flush();
				out.println("<script>");
				out.println("alert('发表留言成功');");
				out.println("</script>");
				PageBean<Message> list = MessageServiceImpl.findbyall(pc,ps);
				model.addAttribute("list", list);
				return "forward:/fruit_page/usermessage.jsp";
				
			}else {
				out.flush();
				out.println("<script>");
				out.println("alert('发表留言失败,请联系管理员');");
				out.println("history.back();");
				out.println("</script>");
			}
		}
		return null;
		}
	@RequestMapping(value="findbyallMessage.action")
	public String findbyallMessage(Model model,Integer pc){
		if(pc == null){
			pc = 1;
		}
		PageBean<Message> list = MessageServiceImpl.findbyall(pc, ps);
	    model.addAttribute("list", list);
	    return "forward:/fruit_page/usermessage.jsp";
	}
	@RequestMapping(value="htfindbyallMessage.action")
	public String htfindbyallMessage(Model model,Integer pc){
		if(pc == null){
			pc = 1;
		}
		PageBean<Message> list = MessageServiceImpl.findbyall(pc, ps);
	    model.addAttribute("list", list);
	    return "forward:/backstage/messagelist.jsp";
	}
	
	@RequestMapping(value="htupdateMessageForpage.action")
	public String htupdateMessageForpage(Model model,String message_id){
		int id = Integer.parseInt(message_id);
		Message message = MessageServiceImpl.findbyid(id);
		model.addAttribute("message", message);
		return "forward:/backstage/messageUpdate.jsp";
	}
	@RequestMapping(value="htupdateMessage.action")
	public String htupdateMessage(Integer pc,HttpServletResponse response,Model model,String id,String message_username,String message_date,String message_content,String message_theme) throws IOException{
		response.setContentType("text/html; charset=utf-8");
		PrintWriter out = response.getWriter();
		if(pc == null){
			pc = 1;
		}
		int message_id= Integer.parseInt(id);
		Message message = new Message(message_id, message_username, message_date, message_content, message_theme);
		boolean flag = MessageServiceImpl.updateMessage(message);
		if(flag==true){
			out.flush();
			out.println("<script>");
			out.println("alert('留言修改成功');");
			out.println("</script>");
			PageBean<Message> list = MessageServiceImpl.findbyall(pc, ps);
			model.addAttribute("list", list);
			return "forward:/backstage/messagelist.jsp";
		}else {
			out.flush();
			out.println("<script>");
			out.println("alert('留言修改失败');");
			out.println("history.back();");
			out.println("</script>");
		}
		return null;
	}
	@RequestMapping(value="htdelMessage.action")
	public String htdelMessage(Integer pc,Model model,HttpServletResponse response,String message_id) throws IOException{
		response.setContentType("text/html; charset=utf-8");
		PrintWriter out = response.getWriter();
		if(pc == null){
			pc = 1;
		}
		int id = Integer.parseInt(message_id);
		boolean flag = MessageServiceImpl.delMessage(id);
		if(flag==true){
			out.flush();
			out.println("<script>");
			out.println("alert('公告删除成功');");
			out.println("</script>");
			PageBean<Message> list = MessageServiceImpl.findbyall(pc, ps);
			model.addAttribute("list", list);
			return "forward:/backstage/messagelist.jsp";
		}else {
			out.flush();
			out.println("<script>");
			out.println("alert('公告删除失败');");
			out.println("history.back();");
			out.println("</script>");
		}
		return null;
	}
	@RequestMapping(value="htfindbyidMessageForpage.action")
	public String htfindbyidMessageForpage(Model model,String message_id){
		int id = Integer.parseInt(message_id);
		Message message = MessageServiceImpl.findbyid(id);
		model.addAttribute("message", message);
		return "forward:/backstage/messageShow.jsp";
	}
}
