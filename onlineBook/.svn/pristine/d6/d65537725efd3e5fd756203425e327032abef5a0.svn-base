package com.b2c.action;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.b2c.entity.Order;
import com.b2c.entity.OrderBooks;
import com.b2c.entity.User;
import com.b2c.service.IOrderBooksService;
import com.b2c.service.IOrderService;

@Controller
public class OrderAction {
	
	@Resource(name="orderServiceImp")
	private IOrderService orderServiceImp;
	
	@Resource(name="orderBooksServiceImp")
	private IOrderBooksService orderBooksServiceImp;
	
	/**
	 * 获取订单信息
	 * @param request
	 * @param response
	 * @param session
	 * @param model
	 * @throws IOException
	 */
	@RequestMapping(value="addMyOrder.action")
	@ResponseBody
	public void addMyOrder(HttpServletRequest request,HttpServletResponse response,HttpSession session,Model model) throws IOException {
		User user = (User)session.getAttribute("user");
		Integer user_id = user.getUser_id();
		List<String> list = new ArrayList<String>();
    	String cartId[] = request.getParameterValues("arrs");
		for(String str : cartId){
			list.add(str);
		}
		int addMyOrder = orderServiceImp.addMyOrder(list, user_id);
		int addOrderBooks = orderBooksServiceImp.addOrderBooks(list, user_id);
		if(addMyOrder == 0 || addOrderBooks == 0){
			response.getWriter().write("添加失败!");
		}else{
			response.getWriter().write("添加成功！");
		}
	}
	
	/**
	 * 显示订单信息
	 * @param session
	 * @param model
	 * @return
	 */
	@RequestMapping(value="selectSaleBook.action")
	public String selectSaleBook(HttpSession session,Model model){
		User user = (User)session.getAttribute("user");
		Integer user_id = user.getUser_id();
		List<Order> orderList = orderServiceImp.selectSaleBook(user_id);
		for(Order order : orderList){
			System.out.println(order);
		}
		model.addAttribute("order", orderList);
		return "forward:/fruit_page/configmenu.jsp";
	}
	
	/**
	 * 删除订单信息
	 * @param order_id
	 * @return
	 */
	@RequestMapping(value="deleteOrder.action")
	public String deleteOrder(Integer order_id){
		boolean update = orderServiceImp.deleteOrder(order_id);
		if(update){
			System.out.println("更新成功");
		}else{
			System.out.println("更新失败");
		}
		return "redirect:/pageSelectCart.action";
	}
	
	/**
	 * 提交订单
	 * @param order_id
	 * @return
	 */
	@RequestMapping(value="submitOrder.action")
	public String submitOrder(Integer order_id){
		List<OrderBooks> orderBooksList = orderBooksServiceImp.selectCart_id(order_id);
		List<Integer> list = new ArrayList<Integer>();
		for(OrderBooks ob : orderBooksList){
			list.add(ob.getCart_id());
		}
		boolean submit = orderServiceImp.submitOrder(list, order_id);
		if(submit){
			return "forward:/fruit_page/jump.jsp";
		}else{
			return "redirect:/selectSaleBook.action";
		}
	}
}
